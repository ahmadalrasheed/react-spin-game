{"version":3,"file":"index.js","sources":["../src/react-spin-game.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useLayoutEffect,\n  forwardRef,\n  useImperativeHandle\n} from 'react'\nimport { ReactComponent as Arrow } from './Images/wheel-arrow.svg'\nimport Styles from './styles.module.css'\n\n\ninterface SpinGameData {\n  data: Array<Array<string>>\n  hideButton?: boolean\n  result?: string\n  time?: number\n  minTime?: number\n  maxTime?: number\n  removeButtonEffect?: boolean\n  fontSize?: number\n  fontFamily?: string\n  horizantalText?: boolean\n}\n\nconst SpinAndWin = forwardRef(\n  (\n    {\n      data,\n      hideButton,\n      result,\n      time,\n      minTime,\n      maxTime,\n      removeButtonEffect,\n      fontSize,\n      fontFamily,\n      horizantalText,\n    }: SpinGameData,\n    ref\n  ) => {\n    interface stateInfo {\n      winnerAngle: number\n    }\n    const wheelRef = useRef<any>()\n    const [state] = useState<stateInfo>({ winnerAngle: 0 })\n    useLayoutEffect(() => {\n      var wheelCanvas = document.getElementById('wheel')\n      if (wheelCanvas && isCanvas(wheelCanvas)) {\n        var wheel = wheelCanvas.getContext('2d')\n        var wheelX = wheelCanvas.width / 2\n        var wheelY = wheelCanvas.height / 2\n        var wheelRadius = Math.min(wheelX, wheelY)\n\n        drawWheel(data, wheel, wheelX, wheelY, wheelRadius)\n      }\n    }, [])\n    function isCanvas(\n      obj: HTMLCanvasElement | HTMLElement\n    ): obj is HTMLCanvasElement {\n      return obj.tagName === 'CANVAS'\n    }\n    const degToRad = (deg: number) => {\n      return (deg * Math.PI) / 180.0\n    }\n    const drawWheel = (\n      list: Array<Array<string>>,\n      wheel: any,\n      wheelX: number,\n      wheelY: number,\n      wheelRadius: number\n    ) => {\n      var segment = 360 / list.length\n\n      list.map((el: Array<string>, i: number) => {\n        wheel.save()\n        wheel.translate(wheelX, wheelY)\n        wheel.rotate(degToRad(segment * i))\n        wheel.translate(-wheelX, -wheelY)\n\n        wheel.fillStyle = el[1] ? el[1] : 'red'\n\n        wheel.beginPath()\n        wheel.moveTo(wheelX, wheelY)\n        wheel.arc(\n          wheelX,\n          wheelY,\n          wheelRadius,\n          0 - degToRad(90) - degToRad(segment / 2),\n          degToRad(segment) - degToRad(90) - degToRad(segment / 2),\n          false\n        )\n        wheel.moveTo(wheelX, wheelY)\n        wheel.fill()\n\n        wheel.fillStyle = 'white'\n        horizantalText ? (wheel.textAlign = 'start') : (wheel.textAlign = 'end')\n        wheel.font =\n          fontSize && fontFamily\n            ? `${fontSize}px ${fontFamily}`\n            : fontSize\n            ? `${fontSize}px sans-serif`\n            : fontFamily\n            ? `18px ${fontFamily}`\n            : '18px sans-serif'\n        wheel.transform = 'translate(50px, 100px)'\n        if (horizantalText) {\n          wheel.textAlign = 'center'\n          wheel.fillText(el[0], wheelX, wheelY / 4)\n        } else {\n          wheel.rotate(-1.57)\n          wheel.fillText(el[0], -20, wheelY + 10)\n        }\n\n        wheel.restore()\n      })\n    }\n    useImperativeHandle(ref, () => ({\n      handleSpin() {\n        let wheelCanvas = document.getElementById('wheel')\n        if (wheelCanvas) {\n          const freeSpinResult = result ? result : '23454'\n          let transitionTime = time\n            ? time\n            : minTime && maxTime && minTime > 0 && maxTime > 0\n            ? Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime\n            : Math.floor(Math.random() * (4 - 3 + 1)) + 3\n          wheelCanvas.style.transition = transitionTime + 's'\n\n          let winner = data.find((item: Array<string>) => {\n            return item[0] === freeSpinResult\n          })\n          if (!winner) {\n            winner = ['']\n          }\n          let freeSpinGifts: Array<string> = []\n          data.map((item: Array<string>) => {\n            freeSpinGifts.push(item[0])\n          })\n          let winnerIndex = freeSpinGifts.indexOf(winner[0])\n          let offset = state.winnerAngle % 360\n          state.winnerAngle =\n            state.winnerAngle +\n            1800 -\n            (360 * winnerIndex) / freeSpinGifts.length -\n            offset\n          let deg = 'rotate(' + state.winnerAngle + 'deg)'\n          wheelCanvas.style.transform = deg\n        }\n      }\n    }))\n    const handleSpin = () => {\n      let wheelCanvas = document.getElementById('wheel')\n      if (wheelCanvas) {\n        const freeSpinResult = result ? result : '23454'\n        let transitionTime = time\n          ? time\n          : minTime && maxTime && minTime > 0 && maxTime > 0\n          ? Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime\n          : Math.floor(Math.random() * (4 - 3 + 1)) + 3\n        wheelCanvas.style.transition = transitionTime + 's'\n\n        let winner = data.find((item: Array<string>) => {\n          return item[0] === freeSpinResult\n        })\n        if (!winner) {\n          winner = ['']\n        }\n        let freeSpinGifts: Array<string> = []\n        data.map((item: Array<string>) => {\n          freeSpinGifts.push(item[0])\n        })\n        let winnerIndex = freeSpinGifts.indexOf(winner[0])\n        let offset = state.winnerAngle % 360\n        state.winnerAngle =\n          state.winnerAngle +\n          2520 -\n          (360 * winnerIndex) / freeSpinGifts.length -\n          offset\n        let deg = 'rotate(' + state.winnerAngle + 'deg)'\n        wheelCanvas.style.transform = deg\n      }\n    }\n    return (\n      <div>\n        <div className={Styles['rewards-spin-game']}>\n          <div className={Styles['canvas-container']}>\n            <canvas\n              ref={wheelRef}\n              id=\"wheel\"\n              className={Styles['wheel']}\n              width='450px'\n              height='450px'\n            />\n            {!hideButton && (\n              <span\n                className={Styles['spin']}\n                onClick={() => (removeButtonEffect ? '' : handleSpin())}\n              >\n                SPIN\n              </span>\n            )}\n          </div>\n          <span className={Styles['arrow']}>\n            <Arrow />\n          </span>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default SpinAndWin\n"],"names":["SpinAndWin","forwardRef","ref","data","hideButton","result","time","minTime","maxTime","removeButtonEffect","fontSize","fontFamily","horizantalText","wheelRef","useRef","useState","winnerAngle","state","useLayoutEffect","wheelCanvas","document","getElementById","isCanvas","wheel","getContext","wheelX","width","wheelY","height","wheelRadius","Math","min","drawWheel","obj","tagName","degToRad","deg","PI","list","segment","length","map","el","i","save","translate","rotate","fillStyle","beginPath","moveTo","arc","fill","textAlign","font","transform","fillText","restore","useImperativeHandle","handleSpin","freeSpinResult","transitionTime","floor","random","style","transition","winner","find","item","freeSpinGifts","push","winnerIndex","indexOf","offset","React","className","Styles","id","onClick","Arrow"],"mappings":"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"}